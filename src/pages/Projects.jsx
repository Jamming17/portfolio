import ProjectInstance from "../components/ProjectInstance";

import projHomepage from "../assets/projects/project_homepage.png";
import projJavaExplanation from "../assets/projects/project_java_explanation.png";
import projRustComprehension from "../assets/projects/project_rust_comprehension.png";
import projPythonGeneration from "../assets/projects/project_python_generation.png";
import projClassDiagram from "../assets/projects/project_class_diagram.png";

import nutrivibeProfile from "../assets/projects/nutrivibe_profile.png";
import nutrivibePosts from "../assets/projects/nutrivibe_posts.png";
import nutrivibePostCreation from "../assets/projects/nutrivibe_post_creation.png";
import nutrivibeChallenges from "../assets/projects/nutrivibe_challenges.png";
import nutrivibeChallengeProgression from "../assets/projects/nutrivibe_challenge_progression.png";
import nutrivibeLiveChat from "../assets/projects/nutrivibe_live_chat.png";

import adAuctionBefore from "../assets/projects/ad_auction_ui_before.png";
import adAuctionAfter from "../assets/projects/ad_auction_ui_after.png";
import adAuctionLoad from "../assets/projects/ad_auction_load.png";
import adAuctionStoryboard from "../assets/projects/ad_auction_storyboard.png";
import adAuctionUml from "../assets/projects/ad_auction_uml.png";

import tetrecsMenu from "../assets/projects/tetrecs_menu.png";
import tetrecsGame from "../assets/projects/tetrecs_game.png";
import tetrecsMultiplayer from "../assets/projects/tetrecs_multiplayer.png";
import tetrecsJavadocs from "../assets/projects/tetrecs_javadocs.png";

import cbsCalendar from "../assets/projects/cbs_calendar.png";
import cbsEventView from "../assets/projects/cbs_event_view.png";
import cbsMultipleEventView from "../assets/projects/cbs_multiple_event_view.png";
import cbsRequestsApproval from "../assets/projects/cbs_requests_approval.png";
import cbsCreateEvent from "../assets/projects/cbs_create_event.png";
import cbsEditDetails from "../assets/projects/cbs_edit_details.png";

import sandwichBusSandwiches1 from "../assets/projects/sandwich_bus_sandwiches1.png";
import sandwichBusSandwiches2 from "../assets/projects/sandwich_bus_sandwiches2.png";
import sandwichBusHomepage from "../assets/projects/sandwich_bus_homepage.png";
import sandwichBusContact from "../assets/projects/sandwich_bus_contact.png";

export default function Projects() {
    const projects = [
        { 
            title: "E-Learning Platform Prototype",
            text: (
                <p>
                    For my dissertation project at university, I developed, tested and evaluated an e-learning platform for beginner programmers, implementing <strong className="text-yellow-100">Large Language Models</strong> with an API in <strong className="text-yellow-100">Java</strong>.<br className="mb-3"/>
                    The program was built in Java with <strong className="text-yellow-100">JavaFX</strong> to make the UI. I used <strong className="text-yellow-100">OpenAI's API</strong> with GPT-4o as my LLM to generate content live as the user works with the program. The base programming course is made in Java and can be translated to C#, Python or Rust using the LLM depending on which language the user wants to learn. They are shown some explanations of code features then asked a couple of different types of question about the information they learned, all of which is generated by the LLM. Marking is also performed by the LLM and if overall marks are low, the LLM identifies user weaknesses and generates some bonus questions for them to answer at the end of the course, targeting these weaknesses.<br className="mb-3"/>
                    I spent a long time testing and tuning the prompts to increase performance and accuracy before handing the program over to a group of experts at each programming language to test and critique the program. While there were some large issues with accuracy - particularly with course translation - results were promising and indicate that this system could work extremely well if given more time for development.<br className="mb-3"/>
                    This project was never put on any git repository, so I have uploaded it to my GitHub which can be viewed <a href="https://github.com/Jamming17/LLM-Dissertation-Project/tree/main" className="underline">here</a>.
                </p>
            ),
            images: [
                {src: projHomepage, caption: "The language selection page of my project"},
                {src: projJavaExplanation, caption: "Variable basics being explained to the user in Java"},
                {src: projRustComprehension, caption: 'A "comprehension" question on functions basics in Rust'},
                {src: projPythonGeneration, caption: 'A "generation" question on file handling in Python'},
                {src: projClassDiagram, caption: "Java class diagram for the finished project"}
            ]
        },
        {
            title: "NutriVibe Cloud Application",
            text: (
                <p>
                    NutriVibe is a <strong className="text-yellow-100">Microsoft Azure</strong> cloud-based social media platform for sharing workout routines, meal plans, mindfulness exercises and more. The application had many features such as a login system, information posting, AI-generated content creation using <strong className="text-yellow-100">Azure OpenAI</strong>, computer vision using <strong className="text-yellow-100">Azure Computer Vision</strong> and live chat using <strong className="text-yellow-100">Azure SignalR</strong>.<br className="mb-3"/>
                    The application was created using Microsoft Azure and hosted publicly on <strong className="text-yellow-100">Google App Engine</strong>. The frontend was built using <strong className="text-yellow-100">Vue.js</strong> and the backend was made using an <strong className="text-yellow-100">Azure Python FunctionApp</strong>. Data was stored in a <strong className="text-yellow-100">NoSQL CosmosDB</strong> database with large media stored in blob storage.<br className="mb-3"/>
                    I worked on this project in a team of six, with each of us making fair contributions and regular commits to our <a href="https://git.soton.ac.uk/wp1g22/nutrivibe" className="underline">frontend</a> and <a href="https://git.soton.ac.uk/wp1g22/nutrivibe-backend" className="underline">backend</a> projects on GitLab. We followed an agile development style with regular group meetings to discuss ideas, design and resolve problems.
                </p>
            ),
            images: [
                {src: nutrivibeProfile, caption: "A NutriVibe user's profile"},
                {src: nutrivibePosts, caption: "A list of user posts"},
                {src: nutrivibePostCreation, caption: "Creating a recipe post"},
                {src: nutrivibeChallenges, caption: "A list of user challenges"},
                {src: nutrivibeChallengeProgression, caption: "The progress page of a challenge"},
                {src: nutrivibeLiveChat, caption: "NutriVibe's live chat feature"}
            ]
        },
        {
            title: "Ad-Auction Statistics Viewer",
            text: (
                <p>
                    My first large-scale software engineering project at university was to develop an ad-auction statistics analysis tool in a team of five. We followed a strict <strong className="text-yellow-100">SCRUM agile development</strong> process with a supervisor to help guide us. We used <strong className="text-yellow-100">Jira</strong> for managing the project.<br className="mb-3"/>
                    The program was built from scratch in Java using the <strong className="text-yellow-100">JavaFX</strong> library to create a sleek easy-to-use UI. It provided a graph to display statistics from pre-made ad auction data files with a large number of filtering and customisation features to view any details required from the file.<br className="mb-3"/>
                    As well as creating the program, we had to design it from scratch. We did this using <strong className="text-yellow-100">UML</strong> diagrams alongside storyboards, personas with use cases and other design techniques. We also had to test our program as thoroughly as possible which we did with unit testing using <strong className="text-yellow-100">JUnit</strong>, partition testing and other types of testing.<br className="mb-3"/>
                    The code is in a private repository on GitHub which cannot be made public due to university restrictions. You can use the slideshow above to view pictures of the program and the design process. If you would like more information about this project, contact me using the details in the page footer.
                </p>
            ),
            images: [
                {src: adAuctionBefore, caption: "Ad auction program before loading data"},
                {src: adAuctionAfter, caption: "Ad auction program after loading data"},
                {src: adAuctionLoad, caption: "The screen to load data from a file"},
                {src: adAuctionStoryboard, caption: "Storyboard created during the planning phase"},
                {src: adAuctionUml, caption: "One of the UML diagrams we used in the planning phase"}
            ]
        },
        {
            title: "Query Language Interpreter",
            text: (
                <p>
                    In a group of three, we took upon us the challenge of writing an <strong className="text-yellow-100">interpreter</strong> for a database query language similar to <strong className="text-yellow-100">Neo4j's Cypher QL</strong>. We used <strong className="text-yellow-100">Haskell</strong> - a functional programming language - to complete this alongside its lexer and parser generator tools <strong className="text-yellow-100">Alex</strong> and <strong className="text-yellow-100">Happy</strong>.<br className="mb-3"/>
                    This was one of the most challenging - but rewarding - projects I faced at university. We started by developing a basic <strong className="text-yellow-100">BNF grammar</strong> of the language. We then quickly developed a lexer and parser and built an evaluation system to allow the language to perform its tasks.<br className="mb-3"/>
                    Unfortunately, I cannot make that repository public due to university restrictions, but if you want to know more feel free to contact me with the details at the bottom of the page!
                </p>
            )
        },
        {
            title: "TetrECS",
            text: (
                <p>
                    TetrECS was a project I worked on solo at university. I spent several weeks developing a Tetris-style matching game in <strong className="text-yellow-100">Java</strong>.<br className="mb-3"/>
                    The game featured a slick, modern UI built with <strong className="text-yellow-100">JavaFX</strong>, complex game logic for block placement, matching and scoring points and a fully-synchronised server-based multiplayer mode. I also went above and beyond and completed and extra nonessential content, allowing for the user to play extra, more challenging game modes.<br className="mb-3"/>
                    Although this was a very challenging task for me to complete alone, it was an incredibly fun and rewarding experience and after submitting my final game, I received 100% full marks.<br className="mb-3"/>
                    Whilst this game cannot be made available on a public repository due to university restrictions, I have an unlisted video uploaded to my YouTube channel detailing the gameplay, code and design decision available <a href="https://youtu.be/d8ADmVyP4gw" className="underline">here</a>.
                </p>
            ),
            images: [
                {src: tetrecsMenu, caption: (<span>The main menu of the game with art by <a href="https://www.youtube.com/@AJTSpace" className="underline">AJTSpace</a></span>)},
                {src: tetrecsGame, caption: "Singleplayer mode"},
                {src: tetrecsMultiplayer, caption: "Synced multiplayer lobby"},
                {src: tetrecsJavadocs, caption: "A Javadoc showing the finished project's class hierarchy"}
            ]
        },
        {
            title: "Climbing Booking System",
            text: (
                <p>
                    The first software engineering project I ever worked on was calendar and session-booking system for Calshot Activity Centre as part of my A-Level Computer Science course.<br className="mb-3"/>
                    I developed an easy-to-use program with a modern interface in <strong className="text-yellow-100">C#</strong> using <strong className="text-yellow-100">Windows Forms</strong>. Users can create an account and sign up to climbing events using an interactive calendar. Staff members have extra permissions and can create and edit events and approve customer sign-ups. This is all handled using a Microsoft Access relational database.<br className="mb-3"/>
                    This project was never put on any git repository, so I have added it to my GitHub which can be viewed <a href="https://github.com/Jamming17/Climbing-Booking-System" className="underline">here</a>.
                </p>
            ),
            images: [
                {src: cbsCalendar, caption: "The main calendar page of the application"},
                {src: cbsEventView, caption: "Viewing a calendar event"},
                {src: cbsMultipleEventView, caption: "Viewing multiple events on one day"},
                {src: cbsRequestsApproval, caption: "Staff can approve customer/event requests"},
                {src: cbsCreateEvent, caption: "Staff can create events"},
                {src: cbsEditDetails, caption: "Users can edit their personal details"}
            ]
        },
        {
            title: "The Sandwich Bus",
            text: (
                <p>
                    This is a small website I built while I was studying at college. The website features three static pages, including a page where you can browse the company's various sandwiches. The project is quite small, but I thought I would feature it here as it was one of my first web projects. I programmed it all manually in <strong className="text-yellow-100">HTML</strong>, <strong className="text-yellow-100">CSS</strong> and <strong className="text-yellow-100">JavaScript</strong>.
                </p>
            ),
            images: [
                {src: sandwichBusSandwiches1, caption: "Top of the sandwiches page"},
                {src: sandwichBusSandwiches2, caption: "The rest of the sandwiches page"},
                {src: sandwichBusHomepage, caption: "The homepage of the Sandwich Bus"},
                {src: sandwichBusContact, caption: "The contact form page"}
            ]
        }
    ];

    return (
        <div className="prose max-w-5xl mx-auto">
            <h1 className="text-4xl font-bold mb-4">My Projects</h1>
            <p className="text-lg">
                Below is a list of my best projects I have worked on both at and outside of college and university. If you have any further questions on any of the projects, feel free to reach out to me using the contact details in the footer of the page. Lastly, projects are in reverse chronological order, so newest first.
            </p>
            {projects.map((project, index) => (
                <ProjectInstance
                    key={index}
                    title={project.title}
                    text={project.text}
                    images={project.images}
                    imageLeft={index % 2 !== 1}
                />
            ))}
        </div>
    );
}